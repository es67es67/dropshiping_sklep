name: Test Portal

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
      env:
        CI: true
    
    - name: Run backend linting
      run: |
        cd backend
        npm run lint || echo "Linting not configured"
    
    - name: Check backend build
      run: |
        cd backend
        npm run build || echo "Build script not configured"

  test-frontend:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --watchAll=false --coverage
      env:
        CI: true
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint || echo "Linting not configured"
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd backend && npm audit --audit-level moderate || echo "Security issues found in backend"
        cd ../frontend && npm audit --audit-level moderate || echo "Security issues found in frontend"
    
    - name: Check for sensitive data
      run: |
        if grep -r "password\|secret\|key" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "⚠️  Potential sensitive data found in code"
        else
          echo "✅ No obvious sensitive data found"
        fi

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Check code formatting
      run: |
        cd backend && npm run format:check || echo "Format check not configured"
        cd ../frontend && npm run format:check || echo "Format check not configured"
    
    - name: Check TypeScript (if applicable)
      run: |
        cd backend && npm run type-check || echo "TypeScript not configured"
        cd ../frontend && npm run type-check || echo "TypeScript not configured"

  deployment-check:
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: |
        cd backend && npm ci
        cd ../frontend && npm ci
    
    - name: Build for production
      run: |
        cd frontend && npm run build
        cd ../backend && npm run build || echo "Backend build not configured"
    
    - name: Test production build
      run: |
        echo "✅ Production build successful"
        echo "Ready for deployment" 